[Version]
Signature="$Windows NT$"

; Issuance Policies have to explicitly be specified for subordinate CAs
; Setting "AllIssuancePolicy" is not recommended as this violates RFC5280
; Instead, specific Issuance Policies should be used whenever possible
;[PolicyStatementExtension]
;Policies=AllIssuancePolicy

;[AllIssuancePolicy]
;OID=2.5.29.32.0

;[Extensions]

; Uncomment for Compliance to ISIS-MTT (Common PKI) Standard
; Key Usage Extension marked as Critical
; Key Usage Extension will be Stripped of DigitalSignature (Only Certificate Signing, Offline CRL Signing, and CRL Signing remaining)
; See https://support.microsoft.com/en-us/kb/888180 for more information

;2.5.29.15 = AwIBBg==
;Critical = 2.5.29.15

[Certsrv_Server]
; The following Settings will only have effect on CA Certificate renewals
RenewalKeyLength=4096

; LoadDefaultTemplates=0 will prevent the CA from instantly loading default 
; Certificate Templates after CA installation
LoadDefaultTemplates=0

; AlternateSignatureAlgorithm=0 makes the CA use PKCS#1 1.5 for Signatures
; AlternateSignatureAlgorithm=1 makes the CA use PKCS#1 2.1 for Signatures
; From a security perspective, PKCS#1 2.1 is recommended.
; However, many vendors (like Cisco) have not implemented PKCS#1 2.1, thus
; their devices cannot understand certificates from a CA that signs with 2.1
; For compatibility reasons, we will have to fall back to 1.5 in most cases
; There are working attacks on 1.5, which are currently mitigated within
; the actual products that use Certificates
; If nothing is specified, 1.5 will be used
AlternateSignatureAlgorithm=0

; EnableKeyCounting configures the CA to increment a counter every time the CAï¿½s 
; signing key is used. Do not enable this setting unless you have a Hardware 
; Security Module (HSM) and associated cryptographic ; service provider (CSP) 
; that supports key counting. Neither the Microsoft Strong CSP nor the Microsoft 
; Software Key Storage Provider (KSP) support key counting.
;EnableKeyCounting=0